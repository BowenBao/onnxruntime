#pragma once

#include <string>
#include <unordered_map>
#include <vector>

namespace LotusIR {  // forward declarations
class Model;
class GraphTransformer;
class NodeArg;
}  // namespace LotusIR

namespace Lotus {
class MLValue;
using InputDefList = std::vector<const LotusIR::NodeArg*>;
using OutputDefList = std::vector<const LotusIR::NodeArg*>;

using NameMLValMap = std::unordered_map<std::string, MLValue>;

/**
* Configuration information for a single Run.
*/
struct RunOptions {
  unsigned short run_log_verbosity_level = 0;  ///< applies to a particular Run() invocation
  std::string run_tag;                         ///< to identify logs generated by a particular Run() invocation
};

}  // namespace Lotus
