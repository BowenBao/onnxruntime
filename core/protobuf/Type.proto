syntax = "proto2";

package LotusIR;

import "core/protobuf/Data.proto";

// Defines the type system.
message TypeProto {
  message TensorTypeProto {
  //BUG,dbox: What does it mean to have no data type specified?
  //BUG,dbox: What does it mean to have data_type UNDEFINED specified?
    optional TensorProto.DataType elem_type = 1;
  }

  message SparseTensorTypeProto {
  //BUG,dbox: See comment on TensorTypeProto.elem_type
    optional TensorProto.DataType elem_type = 1;
  }

  message HandleTypeProto {
  };

  message TupleTypeProto {
    repeated TypeProto elem_type = 1;
  };

  message SeqTypeProto {
  //BUG,dbox: See comment on TensorTypeProto.elem_type
    optional TypeProto elem_type = 1;
  };

  //BUG,dbox: We need to add map, which should look like this:
  // message MapTypeProto {
  //   TypeProto key_type = 1;
  //   TypeProto value_type = 2;
  // }

  oneof value {
    // The type of a tensor.
    TensorTypeProto tensor_type = 1;

    // The type of a sparse tensor.
    SparseTensorTypeProto sparse_tensor_type = 2;

    // The type of an opaque handle. A handle is used to represent a
    // reference to a resource managed by the framework runtime.
    HandleTypeProto handle_type = 3;

    // The type of a tuple.
    TupleTypeProto tuple_type = 4;

    // The type of a sequence.
    SeqTypeProto seq_type = 5;
  }
}
